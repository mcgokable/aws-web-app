{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to create s3 bucket and policy",
    "Parameters": {
        "BucketName": {
            "Type": "String",
            "Description": "Bucket Name",
            "Default": "siarhei-shviadko-bucket"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "Default": "key_for_ec2_first",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PythonWebAMI": {
            "Description": "AMI with python web application.",
            "Type": "AWS::EC2::Image::Id",
            "Default": "ami-0861130fa84673764"
        },
        "PythonWebInstanceType": {
            "Description": "Basic free-tier EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro"
            ],
            "ConstraintDescription": "must be a free-tier EC2 instance type."
        },
        "CPUPolicyTargetValue": {
            "Type": "String",
            "Description": "The target utilization for the CPU metric",
            "Default": 50
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-Network"
                    },
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-InternetGateway"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.11.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-PublicSubnet-A"
                    }
                ]
            }
        },
        "SubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.12.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-PublicSubnet-B"
                    }
                ]
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-PublicSubnet-RouteTable"
                    }
                ]
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetA"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "SubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetB"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "PythonWeb-SecGr1",
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Enable SSH and http",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-SecGr1"
                    }
                ]
            }
        },
        "LaunchTemplate": {
            "Type": "AWS::EC2::LaunchTemplate",
            "Properties": {
                "LaunchTemplateName": "PythonWeb-LaunchTemplate",
                "LaunchTemplateData": {
                    "ImageId": {
                        "Ref": "PythonWebAMI"
                    },
                    "InstanceType": {
                        "Ref": "PythonWebInstanceType"
                    },
                    "IamInstanceProfile": {
                        "Arn": {
                            "Fn::GetAtt": [
                                "MyIamInstanceProfile",
                                "Arn"
                            ]
                        }
                    },
                    "UserData": {
                        "Fn::Base64": "#!/bin/bash\nls -la\npwd\nls -la /home/ubuntu\nsu ubuntu\nwhoami\npip3 list\npip install -r home/ubuntu/app/requirements.txt\nsudo -u ubuntu python3 home/ubuntu/app/main.py"
                    },
                    "NetworkInterfaces": [
                        {
                            "AssociatePublicIpAddress": true,
                            "DeviceIndex": 0,
                            "Groups": [
                                {
                                    "Ref": "InstanceSecurityGroup"
                                }
                            ]
                        }
                    ],
                    "KeyName": {
                        "Ref": "KeyName"
                    }
                }
            }
        },
        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AutoScalingGroupName": "PythonWeb-AutoScalingGroup",
                "LaunchTemplate": {
                    "LaunchTemplateId": {
                        "Ref": "LaunchTemplate"
                    },
                    "Version": {
                        "Fn::GetAtt": [
                            "LaunchTemplate",
                            "LatestVersionNumber"
                        ]
                    }
                },
                "MaxSize": "2",
                "MinSize": "1",
                "DesiredCapacity": "1",
                "VPCZoneIdentifier": [
                    {
                        "Ref": "SubnetA"
                    },
                    {
                        "Ref": "SubnetB"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PythonWeb-AutoScalingGroup",
                        "PropagateAtLaunch": "true"
                    }
                ],
                "TargetGroupArns": [
                    {
                        "Fn::GetAtt": [
                            "ALBTargetGroup",
                            "Arn"
                        ]
                    }
                ]
            }
        },
        "myCPUPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ASGAverageCPUUtilization"
                    },
                    "TargetValue": {
                        "Ref": "CPUPolicyTargetValue"
                    }
                }
            }
        },
        "ApplicationLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "DependsOn": "AttachGateway",
            "Properties": {
                "Scheme": "internet-facing",
                "Subnets": [
                    {
                        "Ref": "SubnetA"
                    },
                    {
                        "Ref": "SubnetB"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "InstanceSecurityGroup",
                            "GroupId"
                        ]
                    }
                ],
                "Name": "PythonWeb-LoadBalancer"
            }
        },
        "ALBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationLoadBalancer"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "ALBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 15,
                "HealthyThresholdCount": 5,
                "Matcher": {
                    "HttpCode": "200"
                },
                "Name": "ALBTargetGroup",
                "Port": 80,
                "Protocol": "HTTP",
                "TargetGroupAttributes": [
                    {
                        "Key": "deregistration_delay.timeout_seconds",
                        "Value": "20"
                    }
                ],
                "UnhealthyThresholdCount": 3,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "MyS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Description": "Bucket on which we will attach and test bucket policy",
            "Properties": {
                "BucketName": {
                    "Ref": "BucketName"
                }
            }
        },
        "MyIamInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "InstanceProfileName": "MyIamInstanceProfile",
                "Path": "/",
                "Roles": [
                    "FullAccessS3"
                ]
            }
        }
    }
}